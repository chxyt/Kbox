This program is free software; you can redistribute it and/or modify
it under the terms of the Apache License, Version 2.0 and
only version 2 as published by the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
Apache 2.0 for more details.

diff --git a/ojluni/src/main/native/UNIXProcess_md.c b/ojluni/src/main/native/UNIXProcess_md.c
index 550a5c5932..80370bf6b6 100644
--- a/ojluni/src/main/native/UNIXProcess_md.c
+++ b/ojluni/src/main/native/UNIXProcess_md.c
@@ -118,10 +118,12 @@
 // Android-changed: disable vfork under AddressSanitizer.
 //  #ifdef __linux__
   #if defined(__linux__) && !__has_feature(address_sanitizer)
-    #define START_CHILD_USE_VFORK 1
+    #define START_CHILD_USE_VFORK 0
   #else
     #define START_CHILD_USE_VFORK 0
   #endif
+#else
+#define START_CHILD_USE_VFORK 0
 #endif
 
 #if START_CHILD_USE_CLONE
diff --git a/libart/src/main/java/java/lang/Daemons.java b/libart/src/main/java/java/lang/Daemons.java
index f25c78c..875c8e3 100644
--- a/libart/src/main/java/java/lang/Daemons.java
+++ b/libart/src/main/java/java/lang/Daemons.java
@@ -427,13 +427,17 @@ public final class Daemons {
                     Thread.getDefaultUncaughtExceptionHandler() == null) {
                 // If we have no handler, log and exit.
                 System.logE(message, syntheticException);
-                System.exit(2);
+                
+                // dont exit the system when timeout exception is detected
+                // System.exit(2);
             }
 
             // Otherwise call the handler to do crash reporting.
             // We don't just throw because we're not the thread that
             // timed out; we're the thread that detected it.
-            Thread.currentThread().dispatchUncaughtException(syntheticException);
+
+            // dont exit the system when timeout exception is detected
+            // Thread.currentThread().dispatchUncaughtException(syntheticException);
         }
     }
 
